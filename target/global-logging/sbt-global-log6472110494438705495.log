[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\GANWEI~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\GANWEI~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 1.8.0_401)
[debug] Load.defaultLoad until apply took 116.6341ms
[debug]           Load.loadUnit: plugins took 99.5561ms
[debug]           Load.loadUnit: defsScala took 0.287ms
[debug] [Loading] Scanning directory C:\Users\Gan Wei Chen\IdeaProjects\finalprojectv2-GanWeiChen\project
[debug]             Load.loadUnit: mkEval took 6.5364ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Gan Wei Chen\IdeaProjects\finalprojectv2-GanWeiChen\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.8599 ms
[info] loading settings for project finalprojectv2-ganweichen-build from idea.sbt ...
[debug]               Load.resolveProject(finalprojectv2-ganweichen-build) took 47.1964ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalprojectv2-ganweichen-build, base: C:\Users\Gan Wei Chen\IdeaProjects\finalprojectv2-GanWeiChen\project, plugins: List(<none>))) took 90.1286ms
[debug] [Loading] Done in C:\Users\Gan Wei Chen\IdeaProjects\finalprojectv2-GanWeiChen\project, returning: (finalprojectv2-ganweichen-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 539.4413ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.3125ms
[debug]         Load.loadUnit(file:/C:/Users/Gan%20Wei%20Chen/IdeaProjects/finalprojectv2-GanWeiChen/project/, ...) took 649.779ms
[debug]       Load.apply: load took 756.2573ms
[debug]       Load.apply: resolveProjects took 5.6977ms
[debug]       Load.apply: finalTransforms took 55.5642ms
[debug]       Load.apply: config.delegates took 7.6942ms
[debug]       Load.apply: Def.make(settings)... took 473.8257ms
[debug]       Load.apply: structureIndex took 112.2557ms
[debug]       Load.apply: mkStreams took 2.1544ms
[info] loading project definition from C:\Users\Gan Wei Chen\IdeaProjects\finalprojectv2-GanWeiChen\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2217.1013ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Gan Wei Chen\IdeaProjects\finalprojectv2-GanWeiChen
[debug]       Load.loadUnit: mkEval took 0.32ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.778 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 19.5382ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Gan Wei Chen\IdeaProjects\finalprojectv2-GanWeiChen, plugins: List(<none>))) took 22.9224ms
[debug] [Loading] Done in C:\Users\Gan Wei Chen\IdeaProjects\finalprojectv2-GanWeiChen, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 80.367ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.9013ms
[debug]   Load.loadUnit(file:/C:/Users/Gan%20Wei%20Chen/IdeaProjects/finalprojectv2-GanWeiChen/, ...) took 2302.3466ms
[debug] Load.apply: load took 2324.327ms
[debug] Load.apply: resolveProjects took 0.1213ms
[debug] Load.apply: finalTransforms took 20.5065ms
[debug] Load.apply: config.delegates took 0.2917ms
[debug] Load.apply: Def.make(settings)... took 87.7325ms
[debug] Load.apply: structureIndex took 30.2039ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to scalaFXIntro (in build file:/C:/Users/Gan%20Wei%20Chen/IdeaProjects/finalprojectv2-GanWeiChen/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52697 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52697, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scalaFXIntro (in build file:/C:/Users/Gan%20Wei%20Chen/IdeaProjects/finalprojectv2-GanWeiChen/)
[debug] > Exec(idea-shell, None, None)
